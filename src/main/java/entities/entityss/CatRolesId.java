package entities.entityss;
// Generated 22/12/2022 04:15:31 PM by Hibernate Tools 4.3.5.Final

import javax.persistence.Column;
import javax.persistence.Embeddable;

/**
 * CatRolesId generated by hbm2java
 */
@Embeddable
public class CatRolesId implements java.io.Serializable {

	private long idRol;
	private String nombre;
	private String descripcion;

	public CatRolesId() {
	}

	public CatRolesId(long idRol) {
		this.idRol = idRol;
	}

	public CatRolesId(long idRol, String nombre, String descripcion) {
		this.idRol = idRol;
		this.nombre = nombre;
		this.descripcion = descripcion;
	}

	@Column(name = "ID_ROL", nullable = false, precision = 11, scale = 0)
	public long getIdRol() {
		return this.idRol;
	}

	public void setIdRol(long idRol) {
		this.idRol = idRol;
	}

	@Column(name = "NOMBRE", length = 100)
	public String getNombre() {
		return this.nombre;
	}

	public void setNombre(String nombre) {
		this.nombre = nombre;
	}

	@Column(name = "DESCRIPCION", length = 100)
	public String getDescripcion() {
		return this.descripcion;
	}

	public void setDescripcion(String descripcion) {
		this.descripcion = descripcion;
	}

	public boolean equals(Object other) {
		if ((this == other))
			return true;
		if ((other == null))
			return false;
		if (!(other instanceof CatRolesId))
			return false;
		CatRolesId castOther = (CatRolesId) other;

		return (this.getIdRol() == castOther.getIdRol())
				&& ((this.getNombre() == castOther.getNombre()) || (this.getNombre() != null
						&& castOther.getNombre() != null && this.getNombre().equals(castOther.getNombre())))
				&& ((this.getDescripcion() == castOther.getDescripcion())
						|| (this.getDescripcion() != null && castOther.getDescripcion() != null
								&& this.getDescripcion().equals(castOther.getDescripcion())));
	}

	public int hashCode() {
		int result = 17;

		result = 37 * result + (int) this.getIdRol();
		result = 37 * result + (getNombre() == null ? 0 : this.getNombre().hashCode());
		result = 37 * result + (getDescripcion() == null ? 0 : this.getDescripcion().hashCode());
		return result;
	}

}
